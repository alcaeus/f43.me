<?xml version="1.0" encoding="UTF-8"?>
<project name="f43.me" default="build">
  <target name="build" depends="prepare,lint,phploc,tools-parallel,phpunit,phpcb"/>
  <target name="tools-parallel" description="Run tools in parallel">
    <parallel threadCount="2">
      <sequential>
        <antcall target="pdepend"/>
      </sequential>
      <antcall target="phpmd-ci"/>
      <antcall target="phpcpd"/>
      <antcall target="phpcs-ci"/>
    </parallel>
  </target>

  <target name="clean-local" description="Cleanup build artifacts">
    <delete dir="${basedir}/build"/>
    <delete dir="${basedir}/app/cache"/>
  </target>

  <target name="local" depends="clean-local" description="Prepare for build local test">
    <mkdir dir="${basedir}/build/code-browser"/>
    <mkdir dir="${basedir}/build/coverage"/>
    <mkdir dir="${basedir}/build/logs"/>
    <mkdir dir="${basedir}/build/pdepend"/>
    <mkdir dir="${basedir}/app/cache"/>

    <exec executable="php">
      <arg value="${basedir}/../app/console"/>
      <arg value="doctrine:mongodb:schema:create"/>
      <arg value="--env=test"/>
    </exec>
    <exec executable="php">
      <arg value="${basedir}/../app/console"/>
      <arg value="doctrine:mongodb:fixtures:load"/>
      <arg value="--env=test"/>
    </exec>
    <exec executable="php">
      <arg value="${basedir}/../app/console"/>
      <arg value="cache:clear"/>
      <arg value="--env=test"/>
    </exec>
  </target>

  <target name="clean" description="Cleanup build artifacts">
    <delete dir="${basedir}/build/code-browser"/>
    <delete dir="${basedir}/build/coverage"/>
    <delete dir="${basedir}/build/logs"/>
    <delete dir="${basedir}/build/pdepend"/>
    <delete dir="${basedir}/app/cache"/>
  </target>

  <target name="prepare" depends="clean" description="Prepare for build">
    <mkdir dir="${basedir}/build/code-browser"/>
    <mkdir dir="${basedir}/build/coverage"/>
    <mkdir dir="${basedir}/build/logs"/>
    <mkdir dir="${basedir}/build/pdepend"/>
    <mkdir dir="${basedir}/app/cache"/>
    <exec executable="php">
      <arg value="${basedir}/../app/console"/>
      <arg value="doctrine:mongodb:schema:create"/>
      <arg value="--env=test"/>
    </exec>
    <exec executable="php">
      <arg value="${basedir}/../app/console"/>
      <arg value="doctrine:mongodb:fixtures:load"/>
      <arg value="--env=test"/>
    </exec>
    <exec executable="composer">
      <arg value="install"/>
      <arg value="--dev"/>
      <arg value="--working-dir=.."/>
    </exec>
    <exec executable="php">
      <arg value="${basedir}/../app/console"/>
      <arg value="cache:clear"/>
      <arg value="--env=test"/>
    </exec>
  </target>

  <target name="lint" description="Perform syntax check of sourcecode files">
    <apply executable="php" failonerror="true">
      <arg value="-l"/>
      <fileset dir="${basedir}/../src">
        <include name="**/*.php"/>
        <modified/>
      </fileset>
      <fileset dir="${basedir}/../src/">
        <include name="**/*Test.php" />
        <modified />
      </fileset>
    </apply>
  </target>

  <target name="phploc" description="Measure project size using PHPLOC">
    <exec executable="phploc">
      <arg value="--log-csv"/>
      <arg value="${basedir}/build/logs/phploc.csv"/>
      <arg value="--exclude"/>
      <arg value="${basedir}/vendor" />
      <arg path="${basedir}/../src"/>
    </exec>
  </target>

  <target name="pdepend" description="Calculate software metrics using PHP_Depend">
    <exec executable="pdepend">
      <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml"/>
      <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg"/>
      <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg"/>
      <arg value="--ignore=${basedir}/vendor/"/>
      <arg path="${basedir}/../src"/>
    </exec>
  </target>

  <target name="phpmd" description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
    <exec executable="phpmd">
      <arg path="${basedir}/../src" />
      <arg value="text" />
      <arg value="codesize,design,unusedcode" />
      <arg value="--exclude" />
      <arg value="${basedir}/vendor" />
    </exec>
  </target>

  <target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
    <exec executable="phpmd">
      <arg path="${basedir}/../src" />
      <arg value="xml" />
      <arg value="codesize,design,unusedcode" />
      <arg value="--reportfile" />
      <arg value="${basedir}/build/logs/pmd.xml" />
      <arg value="--exclude" />
      <arg value="${basedir}/vendor" />
    </exec>
  </target>

  <target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
    <exec executable="phpcs">
      <arg value="--standard=PSR2"/>
      <arg value="--ignore=${basedir}/vendor" />
      <arg path="${basedir}/../src"/>
    </exec>
  </target>

  <target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
    <exec executable="phpcs" output="/dev/null">
      <arg value="--report=checkstyle"/>
      <arg value="--report-file=${basedir}/build/logs/checkstyle.xml"/>
      <arg value="--standard=PSR2"/>
      <arg value="--ignore=vendor"/>
      <arg value="--extensions=php"/>
      <arg path="${basedir}/../src"/>
    </exec>
  </target>

  <target name="phpcpd" description="Find duplicate code using PHPCPD">
    <exec executable="phpcpd">
      <arg value="--log-pmd"/>
      <arg value="${basedir}/build/logs/pmd-cpd.xml"/>
      <arg value="--exclude" />
      <arg value="${basedir}/vendor" />
      <arg path="${basedir}/../src"/>
    </exec>
  </target>

  <target name="phpunit" description="Run unit tests with PHPUnit">
    <exec executable="phpunit" failonerror="true">
      <arg value="-c app"/>
    </exec>
  </target>

  <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
    <exec executable="phpcb">
      <arg value="--log" />
      <arg path="${basedir}/build/logs" />
      <arg value="--source" />
      <arg path="${basedir}/../src" />
      <arg value="--ignore" />
      <arg path="${basedir}/vendor" />
      <arg value="--output" />
      <arg path="${basedir}/build/code-browser" />
    </exec>
  </target>
</project>
